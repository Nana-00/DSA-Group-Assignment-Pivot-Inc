import java.util.*;

/*
Pivot Inc.
10862595-Nana D. Ampomah
10896752-Kenneth Ankrah
10892036-Berima Akoto
10916516-Doreen Oduro
10915824-Emmanuella Afia Frimpomaah Acheampong
*/

// represents a drug with its attributes
class Drug {
    private String code;
    private String name;
    private int quantity;

    public Drug(String code, String name, int quantity) {
        this.code = code;
        this.name = name;
        this.quantity = quantity;
    }

    // Getters and setters for the attributes

    @Override
    public String toString() {
        return "Drug{" +
                "code='" + code + '\'' +
                ", name='" + name + '\'' +
                ", quantity=" + quantity +
                '}';
    }
}

//represents a supplier with its attributes
class Supplier {
    private String name;
    private String location;

    public Supplier(String name, String location) {
        this.name = name;
        this.location = location;
    }

    // Getters and setters for the attributes

    @Override
    public String toString() {
        return "Supplier{" +
                "name='" + name + '\'' +
                ", location='" + location + '\'' +
                '}';
    }
}

//represents a purchase with its attributes
class Purchase {
    private String drugCode;
    private Date purchaseDate;
    private String buyer;
    private double totalAmount;

    public Purchase(String drugCode, Date purchaseDate, String buyer, double totalAmount) {
        this.drugCode = drugCode;
        this.purchaseDate = purchaseDate;
        this.buyer = buyer;
        this.totalAmount = totalAmount;
    }

    // Getters and setters for the attributes

    @Override
    public String toString() {
        return "Purchase{" +
                "drugCode='" + drugCode + '\'' +
                ", purchaseDate=" + purchaseDate +
                ", buyer='" + buyer + '\'' +
                ", totalAmount=" + totalAmount +
                '}';
    }
}

public class PharmacyManagementSystem {
    private List<Drug> drugList;
    private Map<String, List<Supplier>> drugToSuppliersMap;
    private List<Purchase> purchaseHistory;
    private Map<String, Integer> drugSalesMap;

    public PharmacyManagementSystem() {
        drugList = new ArrayList<>();
        drugToSuppliersMap = new HashMap<>();
        purchaseHistory = new ArrayList<>();
        drugSalesMap = new HashMap<>();
    }

    // Method to add a drug to the system
    public void addDrug(Drug drug) {
        drugList.add(drug);
    }

    // Method to remove a drug from the system based on its code
    public void removeDrug(String drugCode) {
        drugList.removeIf(drug -> drug.getCode().equals(drugCode));
    }

    // Method to search for a drug based on its code or name
    public List<Drug> searchDrug(String keyword) {
        List<Drug> searchResults = new ArrayList<>();
        for (Drug drug : drugList) {
            if (drug.getCode().contains(keyword) || drug.getName().contains(keyword)) {
                searchResults.add(drug);
            }
        }
        return searchResults;
    }

    // Method to view all drugs and their suppliers
    public Map<Drug, List<Supplier>> viewAllDrugsAndSuppliers() {
        Map<Drug, List<Supplier>> drugsAndSuppliers = new HashMap<>();
        for (Drug drug : drugList) {
            List<Supplier> suppliers = drugToSuppliersMap.getOrDefault(drug.getCode(), new ArrayList<>());
            drugsAndSuppliers.put(drug, suppliers);
        }
        return drugsAndSuppliers;
    }

    // Method to view purchase history for a specific drug
    public List<Purchase> viewPurchaseHistory(String drugCode) {
        List<Purchase> history = new ArrayList<>();
        for (Purchase purchase : purchaseHistory) {
            if (purchase.getDrugCode().equals(drugCode)) {
                history.add(purchase);
            }
        }
        return history;
    }

    // Method to search for a supplier based on parameters like location
    public List<Supplier> searchSupplier(String drugCode, String location) {
        List<Supplier> suppliers = drugToSuppliersMap.getOrDefault(drugCode, new ArrayList<>());
        List<Supplier> searchResults = new ArrayList<>();
        for (Supplier supplier : suppliers) {
            if (supplier.getLocation().equals(location)) {
                searchResults.add(supplier);
            }
        }
        return searchResults;
    }

    // Method to sell a drug and update sales information
    public void sellDrug(String drugCode) {
        if (drugSalesMap.containsKey(drugCode)) {
            int count = drugSalesMap.get(drugCode);
            drugSalesMap.put(drugCode, count + 1);
        } else {
            drugSalesMap.put(drugCode, 1);
        }
    }

    public static void main(String[] args) {
        // Testing the PharmacyManagementSystem class
        PharmacyManagementSystem pharmacySystem = new PharmacyManagementSystem();

        // Adding drugs
        Drug drug1 = new Drug("D001", "Drug 1", 10);
        Drug drug2 = new Drug("D002", "Drug 2", 5);
        pharmacySystem.addDrug(drug1);
        pharmacySystem.addDrug(drug2);

        // Removing a drug
        pharmacySystem.removeDrug("D002");

        // Searching for drugs
        List<Drug> searchResults = pharmacySystem.searchDrug("Drug");
        for (Drug drug : searchResults) {
            System.out.println(drug);
        }

        // Adding suppliers for a drug
        Supplier supplier1 = new Supplier("Supplier 1", "Location 1");
        Supplier supplier2 = new Supplier("Supplier 2", "Location 2");
        pharmacySystem.drugToSuppliersMap.put("D001", Arrays.asList(supplier1, supplier2));

        // Viewing all drugs and their suppliers
        Map<Drug, List<Supplier>> drugsAndSuppliers = pharmacySystem.viewAllDrugsAndSuppliers();
        for (Map.Entry<Drug, List<Supplier>> entry : drugsAndSuppliers.entrySet()) {
            Drug drug = entry.getKey();
            List<Supplier> suppliers = entry.getValue();
            System.out.println(drug);
            for (Supplier supplier : suppliers) {
                System.out.println(supplier);
            }
        }

        // Adding purchase history for a drug
        Purchase purchase1 = new Purchase("D001", new Date(), "Buyer 1", 100.0);
        Purchase purchase2 = new Purchase("D001", new Date(), "Buyer 2", 200.0);
        pharmacySystem.purchaseHistory.add(purchase1);
        pharmacySystem.purchaseHistory.add(purchase2);

        // Viewing purchase history for a drug
        List<Purchase> history = pharmacySystem.viewPurchaseHistory("D001");
        for (Purchase purchase : history) {
            System.out.println(purchase);
        }

        // Searching for a supplier based on parameters
        List<Supplier> searchResults = pharmacySystem.searchSupplier("D001", "Location 1");
        for (Supplier supplier : searchResults) {
            System.out.println(supplier);
        }

        // Selling a drug and updating sales
        pharmacySystem.sellDrug("D001");
        pharmacySystem.sellDrug("D001");
        System.out.println(pharmacySystem.drugSalesMap.getOrDefault("D001", 0));
    }
}
